name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Enable cache only if dependency files exist
      - name: Setup Python (with cache)
        if: ${{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/poetry.lock') != '' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            **/requirements*.txt
            **/pyproject.toml
            **/poetry.lock

      # Fallback when no dependency files are present (standalone)
      - name: Setup Python (no cache)
        if: ${{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/poetry.lock') == '' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install -e . || true; fi
          pip install pytest

      - name: Run tests
        run: |
          pytest -q || { ec=$?; if [ $ec -eq 5 ]; then echo "No tests collected"; exit 0; else exit $ec; fi; }
